#!/bin/bash

hostname=$1;
owner=$(who am i | awk '{print $1}')
email='webmaster@localhost'

sitesEnableDir='/etc/nginx/sites-enabled'
sitesAvailableDir='/etc/nginx/sites-available/'
HtmlDir='/var/www/html'
sitesAvailabledomain=$sitesAvailable$domain.conf

#make folders
mkdir -pv $hostname/$hostname

#make symbolic link
sudo ln -svfi `pwd`/$hostname/ $HtmlDir/

#add hostname know hosts

#if [ cat /etc/hosts | grep -w $hostname ]
if grep -qw "$hostname" /etc/hosts
then
	echo $hostname exist deja
else
	sudo sed -i "1i127.0.0.1	$hostname" /etc/hosts
fi

#write VHost

template="
server {
    server_name $hostname;
    root $HtmlDir/$hostname/$hostname;

    location / {
        # try to serve file directly, fallback to index.php
        try_files \$uri /index.php\$is_args\$args;
    }

    location ~ ^/index\.php(/|$) {
        fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;

        # optionally set the value of the environment variables used in the application
        # fastcgi_param APP_ENV prod;
        # fastcgi_param APP_SECRET <app-secret-id>;
        # fastcgi_param DATABASE_URL \"mysql://db_user:db_pass@host:3306/db_name\";

        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param SCRIPT_FILENAME \$realpath_root\$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT \$realpath_root;
        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/index.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
        return 404;
    }

    error_log 	`pwd`/$hostname/error.log;
	access_log 	`pwd`/$hostname/access.log;
}
"

		echo  "$template" > $hostname/$hostname.conf
		sudo ln -svfi `pwd`/$hostname/$hostname.conf $sitesAvailableDir/
		sudo ln -svfi $sitesAvailableDir/$hostname.conf $sitesEnableDir/

#restart apache
sudo systemctl restart nginx

